import { Context } from 'telegraf';
import createDebug from 'debug';
import PDFDocument from 'pdfkit';
import { Readable } from 'stream';
import { PassThrough } from 'stream';

const debug = createDebug('bot:pdf');

// Helper function to generate PDF
const generatePdf = () => {
  const doc = new PDFDocument();
  const passThroughStream = new PassThrough();
  doc.pipe(passThroughStream);

  // Add content to the PDF
  doc.fontSize(16).text('Eduhub PDF Content', { align: 'center' });
  doc.moveDown();
  doc.fontSize(12).text('This is a sample PDF generated by Eduhub bot. You can add more content here.');

  // Finalize the PDF document
  doc.end();

  // Return the stream of PDF data
  return passThroughStream;
};

// Main PDF function
const pdf = () => async (ctx: Context) => {
  debug('Triggered "pdf" command');

  const userName = `${ctx.message?.from.first_name}`;

  const userMessage = ctx.message && 'text' in ctx.message ? ctx.message.text.toLowerCase() : null;

  if (userMessage === '/pdf') {
    try {
      // Generate PDF
      const pdfStream = generatePdf();

      // Send the PDF file to the user
      await ctx.replyWithDocument({
        source: pdfStream,
        filename: 'EduhubContent.pdf',
      });

      debug('PDF sent successfully');
    } catch (error) {
      debug('Error generating or sending PDF:', error);
      await ctx.reply('Oops! Something went wrong while generating the PDF.');
    }
  } else {
    // Handle non-text messages (e.g., media)
    await ctx.reply('I can only respond to the /pdf command to generate a PDF.');
  }
};

export { pdf };
